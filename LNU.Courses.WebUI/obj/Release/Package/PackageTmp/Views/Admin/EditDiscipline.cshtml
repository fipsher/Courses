@using System.Collections.Generic
@using System.Linq
@model Entities.Disciplines

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Змінити дисципліну";

    string supAdmRole = "SuperAdmin";
    var temp = Session["Roles"];
    List<string> roles = ((string[])temp).ToList();
}
<script src="~/Scripts/custom/editCourseValidationScript.js"></script>
<h2>Змінити дисципліну</h2>

@using (Html.BeginForm("EditDiscipline", "Admin", FormMethod.Post, new { onsubmit = "return validateForm()" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (roles.Contains(supAdmRole))
                {
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", disabled = true } })
                }
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kafedra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (roles.Contains(supAdmRole))
                {
                    @Html.EditorFor(model => model.kafedra, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.EditorFor(model => model.kafedra, new { htmlAttributes = new { @class = "form-control", disabled = true } })

                }
                @Html.ValidationMessageFor(model => model.kafedra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lecturers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (roles.Contains(supAdmRole))
                {
                    Html.RenderAction("GetLecturerList", "Admin", new { Model.lecturerId});
                }
                else
                {
                    @Html.EditorFor(model => model.Lecturers.fullName, new { htmlAttributes = new { @class = "form-control", disabled = true } })
                    <input type="hidden" name="lecturerId" value="@Model.lecturerId"/>
                }
                @Html.ValidationMessageFor(model => model.Lecturers.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (roles.Contains(supAdmRole))
                {
                    @Html.EditorFor(model => model.course, new { htmlAttributes = new { @class = "form-control courseEditor" } })
                }
                else
                {
                    @Html.EditorFor(model => model.course, new { htmlAttributes = new { @class = "form-control courseEditor", disabled = true } })

                }
                @Html.ValidationMessageFor(model => model.course, "", new { @class = "text-danger" })
                <div class="text-danger" id="newCourse">

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-group" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Зберегти" class="btn btn-default" />
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("Назад до списку", "GetCourses", "Shared")
</div>
