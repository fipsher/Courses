@using System.Collections.Generic
@using System.Linq
@using Entities
@using LNU.Courses.WebUI.Models
@model System.Collections.Generic.IEnumerable<DisciplineViewModel>
@{
    string supAdmRole = "SuperAdmin";
    string adminRole = "Admin";
    string lecturerRole = "Lecturer";

    List<DisciplineViewModel> discs = ViewBag.LecturerCourses;


    var temp = Session["Roles"];
    List<string> roles = new List<string>();
    if (temp != null)
    {   
        roles = ((string[])temp).ToList();
    }
    ViewBag.Title = "Курси";
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Назва", "GetCourses", "Shared", new { name = ViewBag.Name, sortBy = DisciplineSortingEnum.Name }, null)
        </th>
        <th>
            @Html.ActionLink("Кафедра", "GetCourses", "Shared", new { name = ViewBag.Name, sortBy = DisciplineSortingEnum.Kafedra }, null)
        </th>
        <th>
            @Html.ActionLink("Лектор", "GetCourses", "Shared", new { name = ViewBag.Name, sortBy = DisciplineSortingEnum.Lecturer }, null)
        </th>
        <th>
            @Html.ActionLink("Семестр", "GetCourses", "Shared", new { name = ViewBag.Name, sortBy = DisciplineSortingEnum.Course }, null)
        </th>
        <th>
            @Html.ActionLink("Зареєстровано студентів I хвиля", "GetCourses", "Shared", new { sortBy = DisciplineSortingEnum.FirstWave }, null)
        </th>
        <th>
            @Html.ActionLink("Зареєстровано студентів II хвиля", "GetCourses", "Shared", new { sortBy = DisciplineSortingEnum.SecondWave }, null)
        </th>

        <th></th>
        <th></th>
        <th></th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.kafedra)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.lecturer.fullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.course)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.firstWave)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.secondWave)
            </td>
            <td>
                @if (roles.Contains(supAdmRole) || roles.Contains(adminRole) )
                {
                    @Html.ActionLink("Змінити", "EditDiscipline", "Admin", new {item.id}, null)
                }
                @if (roles.Contains(lecturerRole))
                {
                    if (discs.Any(el => el.id == item.id))
                    {
                        @Html.ActionLink("Змінити", "EditDiscipline", "Admin", new {item.id}, null)
                    }
                }
            </td>

            <td>
                @*@if (roles.Contains(supAdmRole) || roles.Contains(adminRole))
                {*@
                    @Html.ActionLink("Деталі", "DetailsOfDiscipline", "Shared", new {id = item.id}, null)
                    @*}*@
            </td>

            <td>
                @if (roles.Contains(supAdmRole))
                {
                    @Html.ActionLink("Видалити", "DeleteDiscipline", "Admin", new {id = item.id}, null)
                }
            </td>
            <td>
                @if (ViewBag.Wave != 0 && (((double)item.course / 2 - Math.Truncate((double)((double)item.course / 2)) == 0.5 && ViewBag.FirstSemestr == false)
                        || ((double)item.course / 2 - Math.Truncate((double)((double)item.course / 2)) == 0 && ViewBag.SecondSemestr == false)))
                {
                    @Html.ActionLink("Обрати", "RegisteringInTheCourse", "Student", new { id = item.id },null)
                }
            </td>

        </tr>
    }

</table>
